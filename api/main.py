from fastapi import FastAPI, File, UploadFile
from pydantic import *
from typing import List
import pandas
import uvicorn
import openpyxl
import matplotlib.pyplot as plt

app = FastAPI()


index = 0

#a class to store our Dataset
class Dataset(BaseModel):
    id_ds = 0
    name = "test"
    dataframe: pandas.DataFrame = None
    class Config:
        arbitrary_types_allowed = True

df = Dataset()
d = {'col1': [1, 2], 'col2': [3, 4]}
df1 = pandas.DataFrame(data=d)
df.dataframe = df1
Store_DF = []


#list the uploaded datasets
@app.get("/datasets/")
def datasets():
    ret = []
    for i in range(len(Store_DF)):
        ret.append(Store_DF[i].name)
    return ret

@app.post("/datasets/")
def upload_file(file : UploadFile):
    global index
    ret = Dataset()
    ret.id_ds = index
    index+=1
    namelist = file.filename.split(".")
    name = namelist[0]
    ret.name = name
    ret.dataframe = pandas.read_csv(file.filename)
    Store_DF.append(ret)
    print(index)
    return ret.id_ds

#return the file name, and size of the dataset object
@app.get("/datasets/{id}/")
def name(id : int):
    for i in range(len(Store_DF)):
        if Store_DF[i].id_ds == id:
            return "{}.csv".format(Store_DF[i].name),Store_DF[i].dataframe.size

#delete the dataset object
@app.delete("/datasets/{id}")
def delete_ds(id : int):
    for i in range(len(Store_DF)):
        if Store_DF[i].id_ds == id:
            del(Store_DF[i])
            return 1


#export the dataset as an excel file
@app.get("/datasets/{id}/excel/")
def df_to_excel(id : int):
    for i in range(len(Store_DF)):
        if Store_DF[i].id_ds == id:
            Store_DF[i].dataframe.to_excel("{}.xlsx".format(Store_DF[i].name))
            return 1

#return the the stats generated by running df.describe() on the pandas dataframe as a json object
@app.get("/datasets/{id}/stats/")
def stats(id : int):
    for i in range(len(Store_DF)):
        if Store_DF[i].id_ds == id:
            data = Store_DF[i].dataframe.describe()
            return data.to_json()

@app.get("/datasets/{id}/plot")
def get_hist(id : int):
    for i in range(len(Store_DF)):
        if Store_DF[i].id_ds == id:
            histo = Store_DF[i].dataframe.hist()
            plt.savefig("{}.pdf".format(Store_DF[i].name))
            return 1

if __name__ == "__main__":
    uvicorn.run(app, host = "127.0.0.1", port = 3000)
